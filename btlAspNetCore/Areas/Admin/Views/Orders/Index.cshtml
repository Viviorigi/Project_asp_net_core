@model X.PagedList.IPagedList<btlAspNetCore.Models.DataModels.Order>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="col-lg-10 m-auto">
<h1>Orders</h1>
    <div class="d-flex align-items-center">
    <form action="" method="get" class="form-inline">
        <div class="form-group d-flex align-items-center">
            <label class="sr-only" for="">label</label>
            <input class="form-control mr-2" name="searchTerm" placeholder="Enter name" value="@ViewBag.searchTerm">
            <button type="submit" class="btn btn-info"><i class="fas fa-search"></i></button>
        </div>
    </form>
    </div>
<table class="table">
    <thead>
        <tr>
             <th>
                  No
             </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Id)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().OrderNote)
            </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().PaymentMethod)
            </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
            @{
                int counter = (Model.PageNumber - 1) * Model.PageSize + 1;
            }
        @foreach (var item in Model) {
     
                <tr>
                    <td class=" text-center">@counter</td>
                    <td>@Html.DisplayFor(modelItem => item.Id)</td>
                    <td class="text-center">
                        @if (item.Status == 1)
                        {
                            <span class="badge badge-warning">Pending Confirmation</span>
                        }
                        else if (item.Status == 2)
                        {
                            <span class="badge badge-info">Confirmed</span>
                        }
                        else if (item.Status == 3)
                        {
                            <span class="badge badge-primary">Shipped</span>
                        }
                        else if (item.Status == 4)
                        {
                            <span class="badge badge-success">Delivered</span>
                        }
                        else if (item.Status == 5)
                        {
                            <span class="badge badge-danger">Canceled</span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNote)
                    </td>

                    <td class="text-center">
                        @Html.Raw((item.PaymentMethod == 1 ? "<span class='badge badge-primary'>Cash </span>" : "<span class='badge badge-warning'>Credit </span>"))
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Name)
                    </td>
                    <td class=" text-center">
                        <a class="btn mx-2 @((item.Status == 4 || item.Status == 5) ? "btn-dark   disabled" : "btn-secondary")"
                           asp-action="Edit" 
                           asp-route-id="@item.Id"
                          
                        >
                           <i class="fas fa-edit"></i>
                        </a>

                        <a class="btn btn-info mx-2" asp-action="Details" asp-route-id="@item.Id">Details <i class="fas fa-info"></i></a>                      
                    </td>
                </tr>
                     counter++;
        }
            </tbody>
        </table>
    <ul class="pagination justify-content-center">
        <!-- Previous button -->
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="?name=@ViewBag.Name&page=@(Model.PageNumber - 1)" aria-label="Previous">
                Previous
            </a>
        </li>

        <!-- Page numbers -->
        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                <a class="page-link" href="?name=@ViewBag.Name&page=@i">@i</a>
            </li>
        }

        <!-- Ellipsis for skipped pages -->
        @if (Model.PageCount > 5 && Model.PageNumber > 3)
        {
            <li class="page-item disabled">
                <a class="page-link">…</a>
            </li>
        }

        <!-- Next button -->
        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" href="?name=@ViewBag.Name&page=@(Model.PageNumber + 1)" aria-label="Next">
                Next
            </a>
        </li>
    </ul>
</div>