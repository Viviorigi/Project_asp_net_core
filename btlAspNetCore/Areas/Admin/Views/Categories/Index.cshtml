 @* @model IEnumerable<btlAspNetCore.Models.DataModels.Category> *@
@model X.PagedList.IPagedList<btlAspNetCore.Models.DataModels.CategoryViewModel>
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}



<div class="col-lg-11 m-auto">
    <h1 >Categories</h1>
    <div class="d-flex align-items-center">
        <form action="" method="get" class="form-inline">
            <div class="form-group d-flex align-items-center">
                <label class="sr-only" for="">label</label>
                <input class="form-control mr-2" name="name" placeholder="Enter name" value="@ViewBag.name">
                <button type="submit" class="btn btn-info"><i class="fas fa-search"></i></button>
            </div>
        </form>
        <a asp-action="Create" class="btn btn-primary ml-2" style="height:40px"><i class="fas fa-plus"></i> Create</a>
    </div>

    <hr />
    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>Success:</strong> @successMessage
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Error:</strong> @errorMessage
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
    <table class="table  table-bordered">
        <thead>
            <tr>
                <th style="width: 5%;">
                    No
                </th>
                <th style="width: 25%;" class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Category.Name)
                </th>
                <th style="width:20%;" class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Category.Status)
                </th>
                <th style="width: 10%;" class="text-center">
                    Product
                </th>
                <th style="width: 40%;" class="text-center">Action</th>
            </tr>
        </thead>
        <tbody>
            @{
                int counter = 1; // Initialize counter for serial number
            }
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @counter
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td class="text-center">
                        <label class="badge @(item.Category.Status == 0 ? "bg-danger" : "bg-success")">
                            @(item.Category.Status == 0 ? "inactive" : "active")
                        </label>
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.ProductCount)
                    </td>
                    <td class="text-center">
                        <a class="btn btn-secondary mx-3" asp-action="Edit" asp-route-id="@item.Category.Id">
                            <i class="fas fa-edit"></i>
                        </a>  |
                        <a class="btn btn-danger mx-3" asp-action="Delete" asp-route-id="@item.Category.Id" onclick="return confirm('Do you want to delete?');">
                            <i class="fas fa-trash"></i>
                        </a>
                    </td>
                </tr>
                counter++; // Increment the counter
            }
        </tbody>
    </table>

    <!-- Pagination -->

        <ul class="pagination justify-content-center">
            <!-- Previous button -->
            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" href="?name=@ViewBag.Name&page=@(Model.PageNumber - 1)" aria-label="Previous">
                    Previous
                </a>
            </li>

            <!-- Page numbers -->
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                    <a class="page-link" href="?name=@ViewBag.Name&page=@i">@i</a>
                </li>
            }

            <!-- Ellipsis for skipped pages -->
            @if (Model.PageCount > 5 && Model.PageNumber > 3)
            {
                <li class="page-item disabled">
                    <a class="page-link">…</a>
                </li>
            }

            <!-- Next button -->
            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" href="?name=@ViewBag.Name&page=@(Model.PageNumber + 1)" aria-label="Next">
                    Next
                </a>
            </li>
        </ul>


</div>
